
 MODULE main
 VAR
    step: 0..22;
    int_x: 0..9;
    int_k: 0..3;
    in_secret: 0..3;
    out_public: 0..3;
    move: boolean;
    temp0: 0..7;
    temp1: 0..11;
    temp2: 0..5;
    temp3: 0..5;

  ASSIGN
    -- (diameter: 25)
    -- L0:
    -- L1: x = 0
    -- L2: k = 0
    -- L3: if (k == 0)
    -- L4: {x := in_secretput();}
    -- L5: else {x := x + x;}
    -- L6: k := k + 1;
    -- L7: temp0 = (x-4);
    -- L8: temp1 = (4+temp0)
    -- L9: temp2 = (k-k);
    -- L10: temp3 = (temp2-3);
    -- L11: public_output = (x % k);
    -- L12: while (k < 3) {
    -- L13: if (k == 0) {
    -- L14:  x := in_secretput();}
    -- L15: else {x := x + x;}
    -- L16: k := k + 1;
    -- L17: temp0 = (x-4);
    -- L18: temp1 = (4+temp0);
    -- L19: temp2 = (k-k);
    -- L20: temp3 = (temp2-3);
    -- L21: out_public=temp1 % temp3; }
    -- L22: END
  init(step):= 0;
  next(step):=
    case
      (step=0): {1};
      (step=1): {2};
      (step=2): {3};
      ((step=3) &   (int_k=0)): {4};
      ((step=3) & (!(int_k=0))): {5};
      (step=4): {6};
      (step=5): {6};
      (step=6): {7};
      (step=7): {8};
      (step=8): {9};
      (step=9): {10};
      (step=10): {11};
      (step=11): {12};
      ((step=12) & (int_k<3)): {13};
      ((step=12) & (!(int_k<3))): {22};
      ((step=13) & (int_k=0)): {14};
      ((step=13) & (!(int_k=0))): {15};
      (step=14): {16};
      (step=15): {16};
      (step=16): {17};
      (step=17): {18};
      (step=18): {19};
      (step=19): {20};
      (step=20): {21};
      (step=21): {12};
      (step=22): {22};
      TRUE: step;
    esac;

  init(temp0) := 0;
  next(temp0) :=
    case
      ((step=7) & (int_x>4)): (int_x - 4);
      ((step=7) & (int_x<=4)): 0;
      ((step=17) & (int_x>4)): (int_x - 4);
      ((step=17) & (int_x<=4)): 0;
      TRUE: temp0;
    esac;

  init(temp1) := 0;
  next(temp1) :=
    case
      (step=8): (4+temp0);
      (step=18): (4+temp0);
      TRUE: temp1;
    esac;

  init(temp2) := 0;
  next(temp2) :=
    case
      (step=9): (int_k - int_k);
      (step=19): (int_k - int_k);
      TRUE: temp2;
    esac;

  init(temp3) := 0;
  next(temp3) :=
    case
      ((step=10) & (temp2>3)): (temp2 - 3);
      ((step=10) & (temp2<=3)): 0;
      ((step=20) & (temp2>3)): (temp2 - 3);
      ((step=20) & (temp2<=3)): 0;
      TRUE: temp3;
    esac;

  init(int_x) := 0;
  next(int_x) :=
    case
      ((int_x+int_x)>9): 9;
      (step=4) : in_secret;
      (step=5) : int_x+int_x;
      (step=14) : in_secret;
      (step=15) : int_x+int_x;
      TRUE: int_x;
    esac;

  init(int_k) := 0;
  next(int_k) :=
    case
      (int_k=3): 3;
      (step=6) : int_k+1;
      (step=16) : int_k+1;
      TRUE: int_k;
    esac;

  init(out_public) := 0;
  next(out_public) :=
    case
      -- ((step=11)& !(int_k=0)): temp1 mod temp3;
      -- ((step=21)& !(int_k=0)): temp1 mod temp3;
      ((step=11)& !(int_k=0)): int_x mod 3;
      ((step=21)& !(int_k=0)): int_x mod 3;
      TRUE: out_public;
    esac;

  init(in_secret) := {0, 1, 2, 3};
  next(in_secret) := in_secret;


  DEFINE
  halt := (step=22);
