
 MODULE main
 VAR
    step: 0..9;
    int_x: 0..15;
    int_k: 0..3;
    in_secret: 0..3;
    out_public: 0..3;

  ASSIGN

    -- D = 32
    -- L0:
    -- L1: x = 0
    -- L2: k = 0
    -- L3: while (k < 3) {
    -- L4: if (k == 0) {
    -- L5:  x := in_secretput();}
    -- L6: else {x := x + x;}
    -- L7: k := k + 1;
    -- L8: out_publicput(x % k);
    -- L9: END
  init(step):= 0;
  next(step):=
    case
      (step=0): {1};
      (step=1): {2};
      (step=2): {3};
      ((step=3) &  (int_k<3)): {4};
      ((step=3) & !(int_k<3)): {9};
      ((step=4) &  (int_k=0)): {5};
      ((step=4) & !(int_k=0)): {6};
      (step=5): {7};
      (step=6): {7};
      (step=7): {8};
      (step=8): {3};
      (step=9): {9};
      TRUE: step;
    esac;

  init(int_x) := 0;
  next(int_x) :=
    case
      ((int_x+int_x)>15): 15;
      (step=5) : in_secret;
      (step=6) : int_x+int_x;
      TRUE: int_x;
    esac;

  init(int_k) := 0;
  next(int_k) :=
    case
      (int_k=3): 3;
      (step=7) : int_k+1;
      TRUE: int_k;
    esac;

  init(out_public) := 0;
  next(out_public) :=
    case
      ((step=8)& !(int_k=0)): int_x mod int_k;
      TRUE: out_public;
    esac;

  init(in_secret) := {0, 1, 2, 3};
  next(in_secret) := in_secret;

  DEFINE
  halt := (step=9);
