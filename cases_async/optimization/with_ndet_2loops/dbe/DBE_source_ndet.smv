
 MODULE main
 VAR
    PC: 0..6;
    loop_count: 0..3;
    -- secret_in: 0..1;
    -- ndet_in: 0..1;
    in_var_x: 0..1;
    in_var_y: 0..1;
    obs_out: 0..2;


  ASSIGN
    -- for i in rnage(3) -- loop 3 times
    -- L0: x := secret_input()
    -- L0: y := ndet_input()
    -- L1: if (x == y):
    -- L2:  if (0):
    -- L3:  out(x)
    -- L4:  else: out(x)
    -- L5: else: out(!x)
    -- L6: END
  init(PC):= 0;
  next(PC):=
    case
      (PC=0): {1};
      ((PC=1) & (in_var_x=in_var_y)): {2};
      ((PC=1) & (!(in_var_x=in_var_y))): {5};
      ((PC=2) & (FALSE)): {3};
      ((PC=2) & (!(FALSE))): {4};
      (PC=3): {6};
      (PC=4): {6};
      (PC=5): {6};
      ((PC=6) & (loop_count<3)): {0}; -- loop back
      ((PC=6) & (loop_count=3)): {6}; -- terminate
      TRUE: PC;
    esac;

  init(loop_count) := 0;
  next(loop_count) :=
    case
      (loop_count=3): loop_count;
      (PC=0): loop_count+1;
      TRUE: loop_count;
    esac;

  init(obs_out) := 0;
  next(obs_out) :=
    case
      ((PC=6) & (loop_count=3)): obs_out;
      (PC=3): in_var_x;
      (PC=4): in_var_x;
      ((PC=5) & (in_var_x=0)): 1;
      ((PC=5) & (in_var_x=1)): 0;
      TRUE: obs_out;
    esac;

  init(in_var_x) := {0, 1};
  next(in_var_x) :=
    case
      ((PC=6) & (loop_count=3)) : in_var_x; -- terminate
      (PC=6) : {0, 1}; --re-fetch input
      TRUE: in_var_x;
    esac;

  init(in_var_y) := {0, 1};
  next(in_var_y) :=
    case
      ((PC=6) & (loop_count=3)) : in_var_y; -- terminate
      (PC=6) : {0, 1}; --re-fetch input
      TRUE: in_var_y;
    esac;

  DEFINE
  halt := ((PC=6) & (loop_count=3));
