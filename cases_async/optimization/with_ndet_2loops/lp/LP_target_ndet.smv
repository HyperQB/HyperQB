
 MODULE main
 VAR
    step: 0..12;
    in_int_x: 0..9;
    in_int_y: 0..3;
    int_k: 0..3;
    secret: 0..9;
    obs_public_out: 0..3;
    loop_count: 0..2;

  ASSIGN

    -- L0: for i in range(2)
    -- L0: x = 0
    -- L0: k = 0
    -- L0: y = input()
    -- L0: if (k == 0 || k == y)
    -- L1: {x := in_secretput();}
    -- L2: else {x := x + x;}
    -- L3: k := k + 1;
    -- L4: obs_public_output = (x % k);
    -- L5: while (k < 3) {
    -- L6: y = input()
    -- L7: if (k == 0 ||  k == y) {
    -- L8:  x := in_secretput();}
    -- L9: else {x := x + x;}
    -- L10: k := k + 1; }
    -- L11: obs_public_output(x % k) ;
    -- L12: END
  init(step):= 0;
  next(step):=
    case
      (loop_count=2):  step; -- terminate
      ((step=0) & ((int_k=0) | (int_k=in_int_y))): {1};
      ((step=0) & !((int_k=0) | (int_k=in_int_y))): {2};
      (step=1): {3};
      (step=2): {3};
      (step=3): {4};
      (step=4): {5};
      ((step=5) & (int_k<3)): {6};
      ((step=5) & !(int_k<3)): {11};
      (step=6): {7};
      ((step=7) & ((int_k=0) | (int_k=in_int_y))): {8};
      ((step=7) & !((int_k=0) | (int_k=in_int_y))): {9};
      (step=8): {10};
      (step=9): {10};
      (step=10): {5};
      (step=11): {12};
      (step=12): {0};
      TRUE: step;
  esac;
  init(loop_count) := 0;
  next(loop_count) :=
    case
      (loop_count=2): loop_count;
      (step=12): loop_count+1;
      TRUE: loop_count;
    esac;


  init(in_int_x) := 0;
  next(in_int_x) :=
    case
      (step=0) : 0;
      ((in_int_x+in_int_x)>9): 9;
      (step=1) : secret;
      (step=2) : in_int_x+in_int_x;
      (step=7) : secret;
      (step=8) : in_int_x+in_int_x;
      TRUE: in_int_x;
    esac;

  init(secret) := 0;
  next(secret) :=
    case
      (step=0 | step=7) : {0,1,2,3};
      TRUE: secret;
    esac;

  init(in_int_y) := 0;
  next(in_int_y) :=
    case
      (step=0) : {1,2,3};
      (step=6) : {1,2,3};
      TRUE: in_int_y;
    esac;


  init(int_k) := 0;
  next(int_k) :=
    case
      (step=0) : 0;
      (int_k=3): 3;
      (step=3) : int_k+1;
      (step=9) : int_k+1;
      TRUE: int_k;
    esac;

  init(obs_public_out) := 0;
  next(obs_public_out) :=
    case
      ((step=4)& !(int_k=0)): in_int_x mod int_k;
      ((step=11)& !(int_k=0)): in_int_x mod int_k;
      TRUE: obs_public_out;
    esac;


  DEFINE
  halt := (step=0 & loop_count=2);
