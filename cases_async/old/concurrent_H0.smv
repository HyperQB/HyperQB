MODULE main
	VAR
		LOCKED: boolean; -- semaphore
		HIGH: boolean; -- high-value

		proc1: process programs(LOCKED, HIGH, 1);
		proc2: process programs(LOCKED, HIGH, 6);

		ASSIGN
			init(LOCKED):= FALSE;
			init(HIGH):= FALSE;
			next(HIGH):= HIGH;


MODULE programs(LOCKED, HIGH, initline)
	VAR
		line: 1..11;
		RUN: boolean;

	ASSIGN

		init(RUN) := FALSE;
		next(RUN) :=
			case
				(running=TRUE) : TRUE;
				(running=FALSE) : FALSE;
			esac;


		next(LOCKED) :=
			case
				(line=2 | line=3 | line=4 ) : TRUE;
				(line=9) : TRUE;
				TRUE: FALSE;
			esac;

		-- init(line) := 1;
		init(line) := initline;
		next(line) :=
			case
				-- program1
				(line=1 & LOCKED) : {1}; -- wait if LOCKED
				(line=1 & !LOCKED) : {2}; -- else go to 2
				(line=2) : {3}; -- LOCK it
				(line=3) : {4}; -- print A
				(line=4) : {5}; -- print B
				(line=5) : {5}; -- UNLOCK, END
				-- program2
				(line=6) : {7}; -- print C
				(line=7 & HIGH) : {8}; -- if HIGH, proceed
				(line=7 & !HIGH) : {11}; -- if !HIGH, skip to end
				(line=8 & LOCKED) : {8}; -- wait if LOCKED
				(line=8 & !LOCKED) : {9}; -- else, proceed
				(line=9) : {10}; -- LOCK
				(line=10) : {11}; -- UNLOCKEd
				(line=11) : {11}; -- print D, END
				TRUE: line;
			esac;

DEFINE
	printA := (line=3);
	printB := (line=4);
	printC := (line=6);
	printD := (line=11);
