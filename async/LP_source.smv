
 MODULE main
 VAR
    step: 0..6;
    int_x: 0..9;
    int_k: 0..3;
    secret_in: 0..3;
    public_out: 0..3;

  ASSIGN

    -- L0:
    -- L0: x = 0
    -- L0: k = 0
    -- L0: while (k < 8) {
    -- L1: if (k == 0) {
    -- L2:  x := secret_input();}
    -- L3: else {x := x + x;}
    -- L4: k := k + 1;
    -- L5: public_output(x % k);
    -- L6: END
  init(step):= 0;
  next(step):=
    case
      ((step=0) & (int_k<3)): {1};
      ((step=0) & !(int_k<3)): {6};
      ((step=1) & (int_k=0)): {2};
      ((step=1) & !(int_k=0)): {3};
      (step=2): {4};
      (step=3): {4};
      (step=4): {5};
      (step=5): {0};
      TRUE: step;
    esac;

  init(int_x) := 0;
  next(int_x) :=
    case
      ((int_x+int_x)>9): 9;
      (step=2) : secret_in;
      (step=3) : int_x+int_x;
      TRUE: int_x;
    esac;

  init(int_k) := 0;
  next(int_k) :=
    case
      (int_k=3): 3;
      (step=4) : int_k+1;
      TRUE: int_k;
    esac;

  init(public_out) := 0;
  next(public_out) :=
    case

      ((step=5)& !(int_k=0)): int_x mod int_k;
      TRUE: public_out;
    esac;

  init(secret_in) := 1;
  next(secret_in) := secret_in;

  DEFINE
  BEGIN := (step=0);
  halt := (step=6);
